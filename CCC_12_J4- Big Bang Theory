# CCC '12 J4 - Big Bang Secrets
# JTUSUKG = BIGBANG

# OL = FL - 3P - K (OL = original letter, FL = final letter, P = position, K = parameter)

k = int(input())
user_input = list(input())
# Dictionary to store alphabets and corresponding numbers as key value pairs
alphabet_num = {'A': 1,
                'B': 2,
                'C': 3,
                'D': 4,
                'E': 5,
                'F': 6,
                'G': 7,
                'H': 8,
                'I': 9,
                'J': 10,
                'K': 11,
                'L': 12,
                'M': 13,
                'N': 14,
                'O': 15,
                'P': 16,
                'Q': 17,
                'R': 18,
                'S': 19,
                'T': 20,
                'U': 21,
                'V': 22,
                'W': 23,
                'X': 24,
                'Y': 25,
                'Z': 26}
i = 0
while i < len(user_input):
    # P = i + 1
    final_letter = alphabet_num[user_input[i]]
    original_num = final_letter - (3 * (i + 1)) - k
    # if the original number is negative or 0, it should wrap around the alphabet, hence +26
    if original_num <= 0:
        original_num = original_num + 26
    # Prints the key, according to the corresponding value (original num) 
    print(list(alphabet_num.keys())[list(alphabet_num.values()).index(original_num)], end="")

    i = i + 1
